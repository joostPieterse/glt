/**
 * generated by Xtext 2.11.0
 */
package org.xtext.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.services.RobotGrammarAccess;
import simplerobot.Robot;
import simplerobot.Statement;
import simplerobot.Trace;

@SuppressWarnings("all")
public class RobotFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private RobotGrammarAccess _robotGrammarAccess;
  
  protected void _format(final Robot robot, @Extension final IFormattableDocument document) {
    EList<Statement> _statements = robot.getStatements();
    for (final Statement statement : _statements) {
      document.<Statement>format(statement);
    }
  }
  
  protected void _format(final Trace trace, @Extension final IFormattableDocument document) {
    document.<String>format(trace.getText());
  }
  
  public void format(final Object trace, final IFormattableDocument document) {
    if (trace instanceof XtextResource) {
      _format((XtextResource)trace, document);
      return;
    } else if (trace instanceof Trace) {
      _format((Trace)trace, document);
      return;
    } else if (trace instanceof Robot) {
      _format((Robot)trace, document);
      return;
    } else if (trace instanceof EObject) {
      _format((EObject)trace, document);
      return;
    } else if (trace == null) {
      _format((Void)null, document);
      return;
    } else if (trace != null) {
      _format(trace, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(trace, document).toString());
    }
  }
}
