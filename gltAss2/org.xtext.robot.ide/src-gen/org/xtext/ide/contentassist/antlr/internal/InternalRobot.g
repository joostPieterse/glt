/*
 * generated by Xtext 2.11.0
 */
grammar InternalRobot;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.RobotGrammarAccess;

}
@parser::members {
	private RobotGrammarAccess grammarAccess;

	public void setGrammarAccess(RobotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleton
entryRuleSingleton
:
{ before(grammarAccess.getSingletonRule()); }
	 ruleSingleton
{ after(grammarAccess.getSingletonRule()); } 
	 EOF 
;

// Rule Singleton
ruleSingleton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingletonAccess().getGroup()); }
		(rule__Singleton__Group__0)
		{ after(grammarAccess.getSingletonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrace
entryRuleTrace
:
{ before(grammarAccess.getTraceRule()); }
	 ruleTrace
{ after(grammarAccess.getTraceRule()); } 
	 EOF 
;

// Rule Trace
ruleTrace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTraceAccess().getGroup()); }
		(rule__Trace__Group__0)
		{ after(grammarAccess.getTraceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuildWall
entryRuleBuildWall
:
{ before(grammarAccess.getBuildWallRule()); }
	 ruleBuildWall
{ after(grammarAccess.getBuildWallRule()); } 
	 EOF 
;

// Rule BuildWall
ruleBuildWall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuildWallAccess().getGroup()); }
		(rule__BuildWall__Group__0)
		{ after(grammarAccess.getBuildWallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropMark
entryRuleDropMark
:
{ before(grammarAccess.getDropMarkRule()); }
	 ruleDropMark
{ after(grammarAccess.getDropMarkRule()); } 
	 EOF 
;

// Rule DropMark
ruleDropMark 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropMarkAccess().getGroup()); }
		(rule__DropMark__Group__0)
		{ after(grammarAccess.getDropMarkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeatStatement
entryRuleRepeatStatement
:
{ before(grammarAccess.getRepeatStatementRule()); }
	 ruleRepeatStatement
{ after(grammarAccess.getRepeatStatementRule()); } 
	 EOF 
;

// Rule RepeatStatement
ruleRepeatStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getGroup()); }
		(rule__RepeatStatement__Group__0)
		{ after(grammarAccess.getRepeatStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfElseStatement
entryRuleIfElseStatement
:
{ before(grammarAccess.getIfElseStatementRule()); }
	 ruleIfElseStatement
{ after(grammarAccess.getIfElseStatementRule()); } 
	 EOF 
;

// Rule IfElseStatement
ruleIfElseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getGroup()); }
		(rule__IfElseStatement__Group__0)
		{ after(grammarAccess.getIfElseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleString0
entryRuleString0
:
{ before(grammarAccess.getString0Rule()); }
	 ruleString0
{ after(grammarAccess.getString0Rule()); } 
	 EOF 
;

// Rule String0
ruleString0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString0Access().getGroup()); }
		(rule__String0__Group__0)
		{ after(grammarAccess.getString0Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFull
entryRuleFull
:
{ before(grammarAccess.getFullRule()); }
	 ruleFull
{ after(grammarAccess.getFullRule()); } 
	 EOF 
;

// Rule Full
ruleFull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFullAccess().getGroup()); }
		(rule__Full__Group__0)
		{ after(grammarAccess.getFullAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMark
entryRuleMark
:
{ before(grammarAccess.getMarkRule()); }
	 ruleMark
{ after(grammarAccess.getMarkRule()); } 
	 EOF 
;

// Rule Mark
ruleMark 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMarkAccess().getGroup()); }
		(rule__Mark__Group__0)
		{ after(grammarAccess.getMarkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAhead
entryRuleAhead
:
{ before(grammarAccess.getAheadRule()); }
	 ruleAhead
{ after(grammarAccess.getAheadRule()); } 
	 EOF 
;

// Rule Ahead
ruleAhead 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAheadAccess().getGroup()); }
		(rule__Ahead__Group__0)
		{ after(grammarAccess.getAheadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeading
entryRuleHeading
:
{ before(grammarAccess.getHeadingRule()); }
	 ruleHeading
{ after(grammarAccess.getHeadingRule()); } 
	 EOF 
;

// Rule Heading
ruleHeading 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeadingAccess().getGroup()); }
		(rule__Heading__Group__0)
		{ after(grammarAccess.getHeadingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getGroup()); }
		(rule__Not__Group__0)
		{ after(grammarAccess.getNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SingletonTypes
ruleSingletonTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingletonTypesAccess().getAlternatives()); }
		(rule__SingletonTypes__Alternatives)
		{ after(grammarAccess.getSingletonTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Orientation
ruleOrientation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrientationAccess().getAlternatives()); }
		(rule__Orientation__Alternatives)
		{ after(grammarAccess.getOrientationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCommentParserRuleCall_0()); }
		ruleComment
		{ after(grammarAccess.getStatementAccess().getCommentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSingletonParserRuleCall_1()); }
		ruleSingleton
		{ after(grammarAccess.getStatementAccess().getSingletonParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTraceParserRuleCall_2()); }
		ruleTrace
		{ after(grammarAccess.getStatementAccess().getTraceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBuildWallParserRuleCall_3()); }
		ruleBuildWall
		{ after(grammarAccess.getStatementAccess().getBuildWallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDropMarkParserRuleCall_4()); }
		ruleDropMark
		{ after(grammarAccess.getStatementAccess().getDropMarkParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_5()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRepeatStatementParserRuleCall_6()); }
		ruleRepeatStatement
		{ after(grammarAccess.getStatementAccess().getRepeatStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfElseStatementParserRuleCall_7()); }
		ruleIfElseStatement
		{ after(grammarAccess.getStatementAccess().getIfElseStatementParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_8()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getFullParserRuleCall_0()); }
		ruleFull
		{ after(grammarAccess.getExpressionAccess().getFullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getMarkParserRuleCall_1()); }
		ruleMark
		{ after(grammarAccess.getExpressionAccess().getMarkParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getAheadParserRuleCall_2()); }
		ruleAhead
		{ after(grammarAccess.getExpressionAccess().getAheadParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getHeadingParserRuleCall_3()); }
		ruleHeading
		{ after(grammarAccess.getExpressionAccess().getHeadingParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getAndParserRuleCall_4()); }
		ruleAnd
		{ after(grammarAccess.getExpressionAccess().getAndParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getNotParserRuleCall_5()); }
		ruleNot
		{ after(grammarAccess.getExpressionAccess().getNotParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingletonTypesAccess().getStepEnumLiteralDeclaration_0()); }
		('step')
		{ after(grammarAccess.getSingletonTypesAccess().getStepEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingletonTypesAccess().getTurnLeftEnumLiteralDeclaration_1()); }
		('turnLeft')
		{ after(grammarAccess.getSingletonTypesAccess().getTurnLeftEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingletonTypesAccess().getDropEnumLiteralDeclaration_2()); }
		('drop')
		{ after(grammarAccess.getSingletonTypesAccess().getDropEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingletonTypesAccess().getPickEnumLiteralDeclaration_3()); }
		('pick')
		{ after(grammarAccess.getSingletonTypesAccess().getPickEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Orientation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrientationAccess().getSouthEnumLiteralDeclaration_0()); }
		('south')
		{ after(grammarAccess.getOrientationAccess().getSouthEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getNorthEnumLiteralDeclaration_1()); }
		('north')
		{ after(grammarAccess.getOrientationAccess().getNorthEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getEastEnumLiteralDeclaration_2()); }
		('east')
		{ after(grammarAccess.getOrientationAccess().getEastEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getWestEnumLiteralDeclaration_3()); }
		('west')
		{ after(grammarAccess.getOrientationAccess().getWestEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotAction_0()); }
	()
	{ after(grammarAccess.getRobotAccess().getRobotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_2()); }
	(rule__Robot__NameAssignment_2)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_4()); }
	(rule__Robot__Group_4__0)?
	{ after(grammarAccess.getRobotAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__0__Impl
	rule__Robot__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getStatementsKeyword_4_0()); }
	'statements'
	{ after(grammarAccess.getRobotAccess().getStatementsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__1__Impl
	rule__Robot__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__2__Impl
	rule__Robot__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getStatementsAssignment_4_2()); }
	(rule__Robot__StatementsAssignment_4_2)
	{ after(grammarAccess.getRobotAccess().getStatementsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__3__Impl
	rule__Robot__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_4_3()); }
	(rule__Robot__Group_4_3__0)*
	{ after(grammarAccess.getRobotAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4_3__0__Impl
	rule__Robot__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getRobotAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getStatementsAssignment_4_3_1()); }
	(rule__Robot__StatementsAssignment_4_3_1)
	{ after(grammarAccess.getRobotAccess().getStatementsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentKeyword_0()); }
	'Comment'
	{ after(grammarAccess.getCommentAccess().getCommentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
	rule__Comment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCommentAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__2__Impl
	rule__Comment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentKeyword_2()); }
	'comment'
	{ after(grammarAccess.getCommentAccess().getCommentKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__3__Impl
	rule__Comment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentAssignment_3()); }
	(rule__Comment__CommentAssignment_3)
	{ after(grammarAccess.getCommentAccess().getCommentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCommentAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Singleton__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Singleton__Group__0__Impl
	rule__Singleton__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingletonAccess().getSingletonKeyword_0()); }
	'Singleton'
	{ after(grammarAccess.getSingletonAccess().getSingletonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Singleton__Group__1__Impl
	rule__Singleton__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingletonAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSingletonAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Singleton__Group__2__Impl
	rule__Singleton__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingletonAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getSingletonAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Singleton__Group__3__Impl
	rule__Singleton__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingletonAccess().getTypeAssignment_3()); }
	(rule__Singleton__TypeAssignment_3)
	{ after(grammarAccess.getSingletonAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Singleton__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingletonAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSingletonAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__0__Impl
	rule__Trace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTraceAction_0()); }
	()
	{ after(grammarAccess.getTraceAccess().getTraceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__1__Impl
	rule__Trace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTraceKeyword_1()); }
	'Trace'
	{ after(grammarAccess.getTraceAccess().getTraceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__2__Impl
	rule__Trace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTraceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__3__Impl
	rule__Trace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getGroup_3()); }
	(rule__Trace__Group_3__0)?
	{ after(grammarAccess.getTraceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTraceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trace__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group_3__0__Impl
	rule__Trace__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTextKeyword_3_0()); }
	'text'
	{ after(grammarAccess.getTraceAccess().getTextKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTextAssignment_3_1()); }
	(rule__Trace__TextAssignment_3_1)
	{ after(grammarAccess.getTraceAccess().getTextAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuildWall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__0__Impl
	rule__BuildWall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getBuildWallKeyword_0()); }
	'BuildWall'
	{ after(grammarAccess.getBuildWallAccess().getBuildWallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__1__Impl
	rule__BuildWall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBuildWallAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__2__Impl
	rule__BuildWall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getRowKeyword_2()); }
	'row'
	{ after(grammarAccess.getBuildWallAccess().getRowKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__3__Impl
	rule__BuildWall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getRowAssignment_3()); }
	(rule__BuildWall__RowAssignment_3)
	{ after(grammarAccess.getBuildWallAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__4__Impl
	rule__BuildWall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getColKeyword_4()); }
	'col'
	{ after(grammarAccess.getBuildWallAccess().getColKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__5__Impl
	rule__BuildWall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getColAssignment_5()); }
	(rule__BuildWall__ColAssignment_5)
	{ after(grammarAccess.getBuildWallAccess().getColAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getBuildWallAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropMark__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__0__Impl
	rule__DropMark__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getDropMarkKeyword_0()); }
	'DropMark'
	{ after(grammarAccess.getDropMarkAccess().getDropMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__1__Impl
	rule__DropMark__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDropMarkAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__2__Impl
	rule__DropMark__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getRowKeyword_2()); }
	'row'
	{ after(grammarAccess.getDropMarkAccess().getRowKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__3__Impl
	rule__DropMark__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getRowAssignment_3()); }
	(rule__DropMark__RowAssignment_3)
	{ after(grammarAccess.getDropMarkAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__4__Impl
	rule__DropMark__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getColKeyword_4()); }
	'col'
	{ after(grammarAccess.getDropMarkAccess().getColKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__5__Impl
	rule__DropMark__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getColAssignment_5()); }
	(rule__DropMark__ColAssignment_5)
	{ after(grammarAccess.getDropMarkAccess().getColAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getDropMarkAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileStatementKeyword_0()); }
	'WhileStatement'
	{ after(grammarAccess.getWhileStatementAccess().getWhileStatementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCondKeyword_2()); }
	'cond'
	{ after(grammarAccess.getWhileStatementAccess().getCondKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCondAssignment_3()); }
	(rule__WhileStatement__CondAssignment_3)
	{ after(grammarAccess.getWhileStatementAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getGroup_4()); }
	(rule__WhileStatement__Group_4__0)?
	{ after(grammarAccess.getWhileStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__0__Impl
	rule__WhileStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyKeyword_4_0()); }
	'body'
	{ after(grammarAccess.getWhileStatementAccess().getBodyKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__1__Impl
	rule__WhileStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getWhileStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__2__Impl
	rule__WhileStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_2()); }
	(rule__WhileStatement__BodyAssignment_4_2)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__3__Impl
	rule__WhileStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getGroup_4_3()); }
	(rule__WhileStatement__Group_4_3__0)*
	{ after(grammarAccess.getWhileStatementAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getWhileStatementAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4_3__0__Impl
	rule__WhileStatement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getWhileStatementAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_3_1()); }
	(rule__WhileStatement__BodyAssignment_4_3_1)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__0__Impl
	rule__RepeatStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getRepeatStatementKeyword_0()); }
	'RepeatStatement'
	{ after(grammarAccess.getRepeatStatementAccess().getRepeatStatementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__1__Impl
	rule__RepeatStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRepeatStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__2__Impl
	rule__RepeatStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getTimesKeyword_2()); }
	'times'
	{ after(grammarAccess.getRepeatStatementAccess().getTimesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__3__Impl
	rule__RepeatStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getTimesAssignment_3()); }
	(rule__RepeatStatement__TimesAssignment_3)
	{ after(grammarAccess.getRepeatStatementAccess().getTimesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__4__Impl
	rule__RepeatStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getGroup_4()); }
	(rule__RepeatStatement__Group_4__0)?
	{ after(grammarAccess.getRepeatStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRepeatStatementAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__0__Impl
	rule__RepeatStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getBodyKeyword_4_0()); }
	'body'
	{ after(grammarAccess.getRepeatStatementAccess().getBodyKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__1__Impl
	rule__RepeatStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getRepeatStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__2__Impl
	rule__RepeatStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_2()); }
	(rule__RepeatStatement__BodyAssignment_4_2)
	{ after(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__3__Impl
	rule__RepeatStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getGroup_4_3()); }
	(rule__RepeatStatement__Group_4_3__0)*
	{ after(grammarAccess.getRepeatStatementAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getRepeatStatementAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4_3__0__Impl
	rule__RepeatStatement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getRepeatStatementAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_3_1()); }
	(rule__RepeatStatement__BodyAssignment_4_3_1)
	{ after(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__0__Impl
	rule__IfElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfElseStatementKeyword_0()); }
	'IfElseStatement'
	{ after(grammarAccess.getIfElseStatementAccess().getIfElseStatementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__1__Impl
	rule__IfElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getIfElseStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__2__Impl
	rule__IfElseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getCondKeyword_2()); }
	'cond'
	{ after(grammarAccess.getIfElseStatementAccess().getCondKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__3__Impl
	rule__IfElseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getCondAssignment_3()); }
	(rule__IfElseStatement__CondAssignment_3)
	{ after(grammarAccess.getIfElseStatementAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__4__Impl
	rule__IfElseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_4()); }
	(rule__IfElseStatement__Group_4__0)?
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__5__Impl
	rule__IfElseStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_5()); }
	(rule__IfElseStatement__Group_5__0)?
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getIfElseStatementAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__0__Impl
	rule__IfElseStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfbodyKeyword_4_0()); }
	'ifbody'
	{ after(grammarAccess.getIfElseStatementAccess().getIfbodyKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__1__Impl
	rule__IfElseStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getIfElseStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__2__Impl
	rule__IfElseStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_2()); }
	(rule__IfElseStatement__IfbodyAssignment_4_2)
	{ after(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__3__Impl
	rule__IfElseStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_4_3()); }
	(rule__IfElseStatement__Group_4_3__0)*
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getIfElseStatementAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4_3__0__Impl
	rule__IfElseStatement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getIfElseStatementAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_3_1()); }
	(rule__IfElseStatement__IfbodyAssignment_4_3_1)
	{ after(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__0__Impl
	rule__IfElseStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getElsebodyKeyword_5_0()); }
	'elsebody'
	{ after(grammarAccess.getIfElseStatementAccess().getElsebodyKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__1__Impl
	rule__IfElseStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getIfElseStatementAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__2__Impl
	rule__IfElseStatement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_2()); }
	(rule__IfElseStatement__ElsebodyAssignment_5_2)
	{ after(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__3__Impl
	rule__IfElseStatement__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_5_3()); }
	(rule__IfElseStatement__Group_5_3__0)*
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getRightCurlyBracketKeyword_5_4()); }
	'}'
	{ after(grammarAccess.getIfElseStatementAccess().getRightCurlyBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_3__0__Impl
	rule__IfElseStatement__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getIfElseStatementAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_3_1()); }
	(rule__IfElseStatement__ElsebodyAssignment_5_3_1)
	{ after(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfStatementKeyword_0()); }
	'IfStatement'
	{ after(grammarAccess.getIfStatementAccess().getIfStatementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getCondKeyword_2()); }
	'cond'
	{ after(grammarAccess.getIfStatementAccess().getCondKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getCondAssignment_3()); }
	(rule__IfStatement__CondAssignment_3)
	{ after(grammarAccess.getIfStatementAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
	(rule__IfStatement__Group_4__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getBodyKeyword_4_0()); }
	'body'
	{ after(grammarAccess.getIfStatementAccess().getBodyKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__1__Impl
	rule__IfStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getIfStatementAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__2__Impl
	rule__IfStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getBodyAssignment_4_2()); }
	(rule__IfStatement__BodyAssignment_4_2)
	{ after(grammarAccess.getIfStatementAccess().getBodyAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__3__Impl
	rule__IfStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4_3()); }
	(rule__IfStatement__Group_4_3__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getIfStatementAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4_3__0__Impl
	rule__IfStatement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getIfStatementAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getBodyAssignment_4_3_1()); }
	(rule__IfStatement__BodyAssignment_4_3_1)
	{ after(grammarAccess.getIfStatementAccess().getBodyAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__String0__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__0__Impl
	rule__String0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getStringKeyword_0()); }
	'String'
	{ after(grammarAccess.getString0Access().getStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__1__Impl
	rule__String0__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getString0Access().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__2__Impl
	rule__String0__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getTextKeyword_2()); }
	'text'
	{ after(grammarAccess.getString0Access().getTextKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__3__Impl
	rule__String0__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getTextAssignment_3()); }
	(rule__String0__TextAssignment_3)
	{ after(grammarAccess.getString0Access().getTextAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getString0Access().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Full__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Full__Group__0__Impl
	rule__Full__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Full__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullAccess().getFullAction_0()); }
	()
	{ after(grammarAccess.getFullAccess().getFullAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Full__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Full__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Full__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullAccess().getFullKeyword_1()); }
	'Full'
	{ after(grammarAccess.getFullAccess().getFullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mark__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mark__Group__0__Impl
	rule__Mark__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mark__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMarkAccess().getMarkAction_0()); }
	()
	{ after(grammarAccess.getMarkAccess().getMarkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mark__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mark__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mark__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMarkAccess().getMarkKeyword_1()); }
	'Mark'
	{ after(grammarAccess.getMarkAccess().getMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ahead__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ahead__Group__0__Impl
	rule__Ahead__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAheadAccess().getAheadAction_0()); }
	()
	{ after(grammarAccess.getAheadAccess().getAheadAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ahead__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAheadAccess().getAheadKeyword_1()); }
	'Ahead'
	{ after(grammarAccess.getAheadAccess().getAheadKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Heading__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__0__Impl
	rule__Heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getHeadingKeyword_0()); }
	'Heading'
	{ after(grammarAccess.getHeadingAccess().getHeadingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__1__Impl
	rule__Heading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getHeadingAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__2__Impl
	rule__Heading__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getWindKeyword_2()); }
	'wind'
	{ after(grammarAccess.getHeadingAccess().getWindKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__3__Impl
	rule__Heading__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getWindAssignment_3()); }
	(rule__Heading__WindAssignment_3)
	{ after(grammarAccess.getHeadingAccess().getWindAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getHeadingAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_0()); }
	'And'
	{ after(grammarAccess.getAndAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
	rule__And__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__2__Impl
	rule__And__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAKeyword_2()); }
	'a'
	{ after(grammarAccess.getAndAccess().getAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__3__Impl
	rule__And__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAAssignment_3()); }
	(rule__And__AAssignment_3)
	{ after(grammarAccess.getAndAccess().getAAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__4__Impl
	rule__And__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getBKeyword_4()); }
	'b'
	{ after(grammarAccess.getAndAccess().getBKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__5__Impl
	rule__And__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getBAssignment_5()); }
	(rule__And__BAssignment_5)
	{ after(grammarAccess.getAndAccess().getBAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getAndAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getNotKeyword_0()); }
	'Not'
	{ after(grammarAccess.getNotAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__1__Impl
	rule__Not__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__2__Impl
	rule__Not__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getEKeyword_2()); }
	'e'
	{ after(grammarAccess.getNotAccess().getEKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__3__Impl
	rule__Not__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getEAssignment_3()); }
	(rule__Not__EAssignment_3)
	{ after(grammarAccess.getNotAccess().getEAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__StatementsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_4_2_0()); }
		ruleStatement
		{ after(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__StatementsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_4_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__CommentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getCommentEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getCommentAccess().getCommentEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingletonAccess().getTypeSingletonTypesEnumRuleCall_3_0()); }
		ruleSingletonTypes
		{ after(grammarAccess.getSingletonAccess().getTypeSingletonTypesEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__TextAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTraceAccess().getTextString0ParserRuleCall_3_1_0()); }
		ruleString0
		{ after(grammarAccess.getTraceAccess().getTextString0ParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildWallAccess().getRowEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getBuildWallAccess().getRowEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__ColAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildWallAccess().getColEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getBuildWallAccess().getColEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropMarkAccess().getRowEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getDropMarkAccess().getRowEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__ColAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropMarkAccess().getColEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getDropMarkAccess().getColEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_2_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__TimesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getTimesEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getRepeatStatementAccess().getTimesEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__BodyAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_2_0()); }
		ruleStatement
		{ after(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__BodyAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getCondExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getIfElseStatementAccess().getCondExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__IfbodyAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_2_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__IfbodyAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__ElsebodyAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_2_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__ElsebodyAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getCondExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getCondExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__BodyAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getBodyStatementParserRuleCall_4_2_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getBodyStatementParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__BodyAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getBodyStatementParserRuleCall_4_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getBodyStatementParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__TextAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString0Access().getTextEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getString0Access().getTextEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__WindAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeadingAccess().getWindOrientationEnumRuleCall_3_0()); }
		ruleOrientation
		{ after(grammarAccess.getHeadingAccess().getWindOrientationEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__AAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getAExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAndAccess().getAExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__BAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getBExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getAndAccess().getBExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__EAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotAccess().getEExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getNotAccess().getEExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
