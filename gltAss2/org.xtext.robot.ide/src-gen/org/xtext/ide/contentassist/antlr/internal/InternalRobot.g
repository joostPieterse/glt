/*
 * generated by Xtext 2.11.0
 */
grammar InternalRobot;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.RobotGrammarAccess;

}
@parser::members {
	private RobotGrammarAccess grammarAccess;

	public void setGrammarAccess(RobotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleton
entryRuleSingleton
:
{ before(grammarAccess.getSingletonRule()); }
	 ruleSingleton
{ after(grammarAccess.getSingletonRule()); } 
	 EOF 
;

// Rule Singleton
ruleSingleton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingletonAccess().getTypeAssignment()); }
		(rule__Singleton__TypeAssignment)
		{ after(grammarAccess.getSingletonAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrace
entryRuleTrace
:
{ before(grammarAccess.getTraceRule()); }
	 ruleTrace
{ after(grammarAccess.getTraceRule()); } 
	 EOF 
;

// Rule Trace
ruleTrace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTraceAccess().getGroup()); }
		(rule__Trace__Group__0)
		{ after(grammarAccess.getTraceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuildWall
entryRuleBuildWall
:
{ before(grammarAccess.getBuildWallRule()); }
	 ruleBuildWall
{ after(grammarAccess.getBuildWallRule()); } 
	 EOF 
;

// Rule BuildWall
ruleBuildWall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuildWallAccess().getGroup()); }
		(rule__BuildWall__Group__0)
		{ after(grammarAccess.getBuildWallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropMark
entryRuleDropMark
:
{ before(grammarAccess.getDropMarkRule()); }
	 ruleDropMark
{ after(grammarAccess.getDropMarkRule()); } 
	 EOF 
;

// Rule DropMark
ruleDropMark 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropMarkAccess().getGroup()); }
		(rule__DropMark__Group__0)
		{ after(grammarAccess.getDropMarkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeatStatement
entryRuleRepeatStatement
:
{ before(grammarAccess.getRepeatStatementRule()); }
	 ruleRepeatStatement
{ after(grammarAccess.getRepeatStatementRule()); } 
	 EOF 
;

// Rule RepeatStatement
ruleRepeatStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getGroup()); }
		(rule__RepeatStatement__Group__0)
		{ after(grammarAccess.getRepeatStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfElseStatement
entryRuleIfElseStatement
:
{ before(grammarAccess.getIfElseStatementRule()); }
	 ruleIfElseStatement
{ after(grammarAccess.getIfElseStatementRule()); } 
	 EOF 
;

// Rule IfElseStatement
ruleIfElseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getGroup()); }
		(rule__IfElseStatement__Group__0)
		{ after(grammarAccess.getIfElseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFull
entryRuleFull
:
{ before(grammarAccess.getFullRule()); }
	 ruleFull
{ after(grammarAccess.getFullRule()); } 
	 EOF 
;

// Rule Full
ruleFull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFullAccess().getGroup()); }
		(rule__Full__Group__0)
		{ after(grammarAccess.getFullAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMark
entryRuleMark
:
{ before(grammarAccess.getMarkRule()); }
	 ruleMark
{ after(grammarAccess.getMarkRule()); } 
	 EOF 
;

// Rule Mark
ruleMark 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMarkAccess().getGroup()); }
		(rule__Mark__Group__0)
		{ after(grammarAccess.getMarkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAhead
entryRuleAhead
:
{ before(grammarAccess.getAheadRule()); }
	 ruleAhead
{ after(grammarAccess.getAheadRule()); } 
	 EOF 
;

// Rule Ahead
ruleAhead 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAheadAccess().getGroup()); }
		(rule__Ahead__Group__0)
		{ after(grammarAccess.getAheadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeading
entryRuleHeading
:
{ before(grammarAccess.getHeadingRule()); }
	 ruleHeading
{ after(grammarAccess.getHeadingRule()); } 
	 EOF 
;

// Rule Heading
ruleHeading 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeadingAccess().getGroup()); }
		(rule__Heading__Group__0)
		{ after(grammarAccess.getHeadingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getGroup()); }
		(rule__Not__Group__0)
		{ after(grammarAccess.getNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SingletonTypes
ruleSingletonTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingletonTypesAccess().getAlternatives()); }
		(rule__SingletonTypes__Alternatives)
		{ after(grammarAccess.getSingletonTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Orientation
ruleOrientation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrientationAccess().getAlternatives()); }
		(rule__Orientation__Alternatives)
		{ after(grammarAccess.getOrientationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCommentParserRuleCall_0()); }
		ruleComment
		{ after(grammarAccess.getStatementAccess().getCommentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSingletonParserRuleCall_1()); }
		ruleSingleton
		{ after(grammarAccess.getStatementAccess().getSingletonParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTraceParserRuleCall_2()); }
		ruleTrace
		{ after(grammarAccess.getStatementAccess().getTraceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBuildWallParserRuleCall_3()); }
		ruleBuildWall
		{ after(grammarAccess.getStatementAccess().getBuildWallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDropMarkParserRuleCall_4()); }
		ruleDropMark
		{ after(grammarAccess.getStatementAccess().getDropMarkParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_5()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRepeatStatementParserRuleCall_6()); }
		ruleRepeatStatement
		{ after(grammarAccess.getStatementAccess().getRepeatStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfElseStatementParserRuleCall_7()); }
		ruleIfElseStatement
		{ after(grammarAccess.getStatementAccess().getIfElseStatementParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getFullParserRuleCall_0()); }
		ruleFull
		{ after(grammarAccess.getAtomicAccess().getFullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getMarkParserRuleCall_1()); }
		ruleMark
		{ after(grammarAccess.getAtomicAccess().getMarkParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getAheadParserRuleCall_2()); }
		ruleAhead
		{ after(grammarAccess.getAtomicAccess().getAheadParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getHeadingParserRuleCall_3()); }
		ruleHeading
		{ after(grammarAccess.getAtomicAccess().getHeadingParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getNotParserRuleCall_4()); }
		ruleNot
		{ after(grammarAccess.getAtomicAccess().getNotParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAndKeyword_2_0_0()); }
		'and'
		{ after(grammarAccess.getExpressionAccess().getAndKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getOrKeyword_2_0_1()); }
		'or'
		{ after(grammarAccess.getExpressionAccess().getOrKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingletonTypesAccess().getStepEnumLiteralDeclaration_0()); }
		('step')
		{ after(grammarAccess.getSingletonTypesAccess().getStepEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingletonTypesAccess().getTurnLeftEnumLiteralDeclaration_1()); }
		('turnLeft')
		{ after(grammarAccess.getSingletonTypesAccess().getTurnLeftEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingletonTypesAccess().getDropEnumLiteralDeclaration_2()); }
		('drop')
		{ after(grammarAccess.getSingletonTypesAccess().getDropEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingletonTypesAccess().getPickEnumLiteralDeclaration_3()); }
		('pick')
		{ after(grammarAccess.getSingletonTypesAccess().getPickEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Orientation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrientationAccess().getSouthEnumLiteralDeclaration_0()); }
		('south')
		{ after(grammarAccess.getOrientationAccess().getSouthEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getNorthEnumLiteralDeclaration_1()); }
		('north')
		{ after(grammarAccess.getOrientationAccess().getNorthEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getEastEnumLiteralDeclaration_2()); }
		('east')
		{ after(grammarAccess.getOrientationAccess().getEastEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getWestEnumLiteralDeclaration_3()); }
		('west')
		{ after(grammarAccess.getOrientationAccess().getWestEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotAction_0()); }
	()
	{ after(grammarAccess.getRobotAccess().getRobotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getScriptKeyword_1()); }
	'Script'
	{ after(grammarAccess.getRobotAccess().getScriptKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_2()); }
	(rule__Robot__NameAssignment_2)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRunsKeyword_3()); }
	'runs'
	{ after(grammarAccess.getRobotAccess().getRunsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getAsKeyword_4()); }
	'as'
	{ after(grammarAccess.getRobotAccess().getAsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__5__Impl
	rule__Robot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLineFeedKeyword_5()); }
	('\n')?
	{ after(grammarAccess.getRobotAccess().getLineFeedKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__6__Impl
	rule__Robot__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_6()); }
	(rule__Robot__Group_6__0)?
	{ after(grammarAccess.getRobotAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getEndKeyword_7()); }
	'end'
	{ after(grammarAccess.getRobotAccess().getEndKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_6__0__Impl
	rule__Robot__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getStatementsAssignment_6_0()); }
	(rule__Robot__StatementsAssignment_6_0)
	{ after(grammarAccess.getRobotAccess().getStatementsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_6__1__Impl
	rule__Robot__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLineFeedKeyword_6_1()); }
	('\n')?
	{ after(grammarAccess.getRobotAccess().getLineFeedKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_6_2()); }
	(rule__Robot__Group_6_2__0)*
	{ after(grammarAccess.getRobotAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_6_2__0__Impl
	rule__Robot__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getStatementsAssignment_6_2_0()); }
	(rule__Robot__StatementsAssignment_6_2_0)
	{ after(grammarAccess.getRobotAccess().getStatementsAssignment_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLineFeedKeyword_6_2_1()); }
	('\n')?
	{ after(grammarAccess.getRobotAccess().getLineFeedKeyword_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionAction_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAAssignment_1()); }
	(rule__Expression__AAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
	(rule__Expression__Group_2__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_2_0()); }
	(rule__Expression__Alternatives_2_0)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getBAssignment_2_1()); }
	(rule__Expression__BAssignment_2_1)
	{ after(grammarAccess.getExpressionAccess().getBAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentAction_0()); }
	()
	{ after(grammarAccess.getCommentAccess().getCommentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCOMMENTTEXTTerminalRuleCall_1()); }
	RULE_COMMENTTEXT
	{ after(grammarAccess.getCommentAccess().getCOMMENTTEXTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__0__Impl
	rule__Trace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTraceAction_0()); }
	()
	{ after(grammarAccess.getTraceAccess().getTraceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__1__Impl
	rule__Trace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTraceKeyword_1()); }
	'trace'
	{ after(grammarAccess.getTraceAccess().getTraceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trace__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceAccess().getTextAssignment_2()); }
	(rule__Trace__TextAssignment_2)
	{ after(grammarAccess.getTraceAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuildWall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__0__Impl
	rule__BuildWall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getBuildWallKeyword_0()); }
	'buildWall'
	{ after(grammarAccess.getBuildWallAccess().getBuildWallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__1__Impl
	rule__BuildWall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getAtKeyword_1()); }
	'at'
	{ after(grammarAccess.getBuildWallAccess().getAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__2__Impl
	rule__BuildWall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getRowKeyword_2()); }
	'row:'
	{ after(grammarAccess.getBuildWallAccess().getRowKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__3__Impl
	rule__BuildWall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getRowAssignment_3()); }
	(rule__BuildWall__RowAssignment_3)
	{ after(grammarAccess.getBuildWallAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__4__Impl
	rule__BuildWall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getColKeyword_4()); }
	'col:'
	{ after(grammarAccess.getBuildWallAccess().getColKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuildWall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildWallAccess().getColAssignment_5()); }
	(rule__BuildWall__ColAssignment_5)
	{ after(grammarAccess.getBuildWallAccess().getColAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropMark__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__0__Impl
	rule__DropMark__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getDropMarkKeyword_0()); }
	'dropMark'
	{ after(grammarAccess.getDropMarkAccess().getDropMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__1__Impl
	rule__DropMark__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getAtKeyword_1()); }
	'at'
	{ after(grammarAccess.getDropMarkAccess().getAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__2__Impl
	rule__DropMark__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getRowKeyword_2()); }
	'row:'
	{ after(grammarAccess.getDropMarkAccess().getRowKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__3__Impl
	rule__DropMark__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getRowAssignment_3()); }
	(rule__DropMark__RowAssignment_3)
	{ after(grammarAccess.getDropMarkAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__4__Impl
	rule__DropMark__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getColKeyword_4()); }
	'col:'
	{ after(grammarAccess.getDropMarkAccess().getColKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropMark__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropMarkAccess().getColAssignment_5()); }
	(rule__DropMark__ColAssignment_5)
	{ after(grammarAccess.getDropMarkAccess().getColAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
	(rule__WhileStatement__CondAssignment_1)
	{ after(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileStatementAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLineFeedKeyword_3()); }
	('\n')?
	{ after(grammarAccess.getWhileStatementAccess().getLineFeedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getGroup_4()); }
	(rule__WhileStatement__Group_4__0)?
	{ after(grammarAccess.getWhileStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getWhileStatementAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__0__Impl
	rule__WhileStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_0()); }
	(rule__WhileStatement__BodyAssignment_4_0)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__1__Impl
	rule__WhileStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLineFeedKeyword_4_1()); }
	('\n')?
	{ after(grammarAccess.getWhileStatementAccess().getLineFeedKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getGroup_4_2()); }
	(rule__WhileStatement__Group_4_2__0)*
	{ after(grammarAccess.getWhileStatementAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4_2__0__Impl
	rule__WhileStatement__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_2_0()); }
	(rule__WhileStatement__BodyAssignment_4_2_0)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLineFeedKeyword_4_2_1()); }
	('\n')?
	{ after(grammarAccess.getWhileStatementAccess().getLineFeedKeyword_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__0__Impl
	rule__RepeatStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getRepeatKeyword_0()); }
	'repeat'
	{ after(grammarAccess.getRepeatStatementAccess().getRepeatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__1__Impl
	rule__RepeatStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getTimesAssignment_1()); }
	(rule__RepeatStatement__TimesAssignment_1)
	{ after(grammarAccess.getRepeatStatementAccess().getTimesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__2__Impl
	rule__RepeatStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getTimesKeyword_2()); }
	'times'
	{ after(grammarAccess.getRepeatStatementAccess().getTimesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__3__Impl
	rule__RepeatStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getLineFeedKeyword_3()); }
	('\n')?
	{ after(grammarAccess.getRepeatStatementAccess().getLineFeedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__4__Impl
	rule__RepeatStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getGroup_4()); }
	(rule__RepeatStatement__Group_4__0)?
	{ after(grammarAccess.getRepeatStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getRepeatStatementAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__0__Impl
	rule__RepeatStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_0()); }
	(rule__RepeatStatement__BodyAssignment_4_0)
	{ after(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__1__Impl
	rule__RepeatStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getLineFeedKeyword_4_1()); }
	('\n')?
	{ after(grammarAccess.getRepeatStatementAccess().getLineFeedKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getGroup_4_2()); }
	(rule__RepeatStatement__Group_4_2__0)*
	{ after(grammarAccess.getRepeatStatementAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4_2__0__Impl
	rule__RepeatStatement__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_2_0()); }
	(rule__RepeatStatement__BodyAssignment_4_2_0)
	{ after(grammarAccess.getRepeatStatementAccess().getBodyAssignment_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getLineFeedKeyword_4_2_1()); }
	('\n')?
	{ after(grammarAccess.getRepeatStatementAccess().getLineFeedKeyword_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__0__Impl
	rule__IfElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfElseStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__1__Impl
	rule__IfElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getCondAssignment_1()); }
	(rule__IfElseStatement__CondAssignment_1)
	{ after(grammarAccess.getIfElseStatementAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__2__Impl
	rule__IfElseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getIfElseStatementAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__3__Impl
	rule__IfElseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_3()); }
	('\n')?
	{ after(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__4__Impl
	rule__IfElseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_4()); }
	(rule__IfElseStatement__Group_4__0)?
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__5__Impl
	rule__IfElseStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_5()); }
	(rule__IfElseStatement__Group_5__0)?
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getIfElseStatementAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__0__Impl
	rule__IfElseStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_0()); }
	(rule__IfElseStatement__IfbodyAssignment_4_0)
	{ after(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__1__Impl
	rule__IfElseStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_4_1()); }
	('\n')?
	{ after(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_4_2()); }
	(rule__IfElseStatement__Group_4_2__0)*
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4_2__0__Impl
	rule__IfElseStatement__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_2_0()); }
	(rule__IfElseStatement__IfbodyAssignment_4_2_0)
	{ after(grammarAccess.getIfElseStatementAccess().getIfbodyAssignment_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_4_2_1()); }
	('\n')?
	{ after(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__0__Impl
	rule__IfElseStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getIfElseStatementAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__1__Impl
	rule__IfElseStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_5_1()); }
	('\n')?
	{ after(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_5_2()); }
	(rule__IfElseStatement__Group_5_2__0)?
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_2__0__Impl
	rule__IfElseStatement__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_2_0()); }
	(rule__IfElseStatement__ElsebodyAssignment_5_2_0)
	{ after(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_2__1__Impl
	rule__IfElseStatement__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_5_2_1()); }
	('\n')?
	{ after(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getGroup_5_2_2()); }
	(rule__IfElseStatement__Group_5_2_2__0)*
	{ after(grammarAccess.getIfElseStatementAccess().getGroup_5_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStatement__Group_5_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_2_2__0__Impl
	rule__IfElseStatement__Group_5_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_2_2_0()); }
	(rule__IfElseStatement__ElsebodyAssignment_5_2_2_0)
	{ after(grammarAccess.getIfElseStatementAccess().getElsebodyAssignment_5_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStatement__Group_5_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__Group_5_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_5_2_2_1()); }
	('\n')?
	{ after(grammarAccess.getIfElseStatementAccess().getLineFeedKeyword_5_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Full__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Full__Group__0__Impl
	rule__Full__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Full__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullAccess().getFullAction_0()); }
	()
	{ after(grammarAccess.getFullAccess().getFullAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Full__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Full__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Full__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullAccess().getFullKeyword_1()); }
	'full'
	{ after(grammarAccess.getFullAccess().getFullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mark__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mark__Group__0__Impl
	rule__Mark__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mark__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMarkAccess().getMarkAction_0()); }
	()
	{ after(grammarAccess.getMarkAccess().getMarkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mark__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mark__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mark__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMarkAccess().getMarkKeyword_1()); }
	'mark'
	{ after(grammarAccess.getMarkAccess().getMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ahead__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ahead__Group__0__Impl
	rule__Ahead__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAheadAccess().getAheadAction_0()); }
	()
	{ after(grammarAccess.getAheadAccess().getAheadAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ahead__Group__1__Impl
	rule__Ahead__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAheadAccess().getWallKeyword_1()); }
	'wall'
	{ after(grammarAccess.getAheadAccess().getWallKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ahead__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ahead__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAheadAccess().getAheadKeyword_2()); }
	'ahead'
	{ after(grammarAccess.getAheadAccess().getAheadKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Heading__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__0__Impl
	rule__Heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getHeadingKeyword_0()); }
	'heading'
	{ after(grammarAccess.getHeadingAccess().getHeadingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Heading__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeadingAccess().getWindAssignment_1()); }
	(rule__Heading__WindAssignment_1)
	{ after(grammarAccess.getHeadingAccess().getWindAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getNotAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getEAssignment_1()); }
	(rule__Not__EAssignment_1)
	{ after(grammarAccess.getNotAccess().getEAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__StatementsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_6_0_0()); }
		ruleStatement
		{ after(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__StatementsAssignment_6_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_6_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getRobotAccess().getStatementsStatementParserRuleCall_6_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAAtomicParserRuleCall_1_0()); }
		ruleAtomic
		{ after(grammarAccess.getExpressionAccess().getAAtomicParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__BAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getBExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getBExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingletonAccess().getTypeSingletonTypesEnumRuleCall_0()); }
		ruleSingletonTypes
		{ after(grammarAccess.getSingletonAccess().getTypeSingletonTypesEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTraceAccess().getTextEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTraceAccess().getTextEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildWallAccess().getRowEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getBuildWallAccess().getRowEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuildWall__ColAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildWallAccess().getColEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getBuildWallAccess().getColEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropMarkAccess().getRowEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getDropMarkAccess().getRowEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropMark__ColAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropMarkAccess().getColEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getDropMarkAccess().getColEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__TimesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getTimesEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getRepeatStatementAccess().getTimesEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__BodyAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_0_0()); }
		ruleStatement
		{ after(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__BodyAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getRepeatStatementAccess().getBodyStatementParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfElseStatementAccess().getCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__IfbodyAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__IfbodyAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getIfbodyStatementParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__ElsebodyAssignment_5_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStatement__ElsebodyAssignment_5_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_2_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatementAccess().getElsebodyStatementParserRuleCall_5_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Heading__WindAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeadingAccess().getWindOrientationEnumRuleCall_1_0()); }
		ruleOrientation
		{ after(grammarAccess.getHeadingAccess().getWindOrientationEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__EAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotAccess().getEAtomicParserRuleCall_1_0()); }
		ruleAtomic
		{ after(grammarAccess.getNotAccess().getEAtomicParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_COMMENTTEXT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
